---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ingress-nginx
  namespace: flux-system
spec:
  interval: 10m
  releaseName: ingress-nginx
  targetNamespace: ingress-nginx
  chart:
    spec:
      chart: ingress-nginx
      version: 4.12.3
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx
        namespace: flux-system
  values:
    controller:
      replicaCount: 1
      nodeSelector:
        kubernetes.io/hostname: k8s-master
      tolerations:
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
      service:
        type: LoadBalancer
        externalTrafficPolicy: Local
      config:
        use-forwarded-headers: "true"
        compute-full-forwarded-for: "true"
        enable-real-ip: "true"
        real-ip-header: "X-Forwarded-For"
        set-real-ip-from: 
          - "192.168.178.0/24"
        ssl-protocols: "TLSv1.2 TLSv1.3"
        ssl-prefer-server-ciphers: "true"
        ssl-ciphers: "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384"
        limit-connections: "10"
        limit-rpm: "60"
        limit-rps: "5"
        plugins: "crowdsec"
        lua-shared-dicts: "crowdsec_cache: 50m"
        resolver: "192.168.178.200"
        http-snippet: |
          log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
          access_log /var/log/nginx/access.log main;
          error_log  /var/log/nginx/error.log warn;

          more_set_headers "X-Frame-Options: DENY";
          more_set_headers "X-Content-Type-Options: nosniff";
          more_set_headers "X-XSS-Protection: 1; mode=block";
          more_set_headers "Strict-Transport-Security: max-age=63072000; includeSubDomains; preload";
          more_set_headers "Referrer-Policy: no-referrer-when-downgrade";
          more_set_headers "Permissions-Policy: geolocation=(), microphone=()";
      extraVolumes:
        - name: nginx-logs
          hostPath:
            path: /var/log/nginx
            type: DirectoryOrCreate
        - name: crowdsec-bouncer-plugin
          emptyDir: {}
      extraInitContainers:
        - name: init-clone-crowdsec-bouncer
          image: crowdsecurity/lua-bouncer-plugin:v1.0.5
          imagePullPolicy: IfNotPresent
          env:
            - name: API_URL
              value: "http://192.168.178.200:8080"
            - name: API_KEY
              valueFrom:
                secretKeyRef:
                  name: crowdsec-nginx-bouncer-api-key
                  key: api-key
            - name: BOUNCER_CONFIG
              value: "/crowdsec/crowdsec-bouncer.conf"
          command:
            - "sh"
            - "-c"
            - "sh /docker_start.sh; mkdir -p /lua_plugins/crowdsec/; cp -R /crowdsec/* /lua_plugins/crowdsec/"
          volumeMounts:
            - name: crowdsec-bouncer-plugin
              mountPath: /lua_plugins
      extraVolumeMounts:
        - name: nginx-logs
          mountPath: /var/log/nginx
        - name: crowdsec-bouncer-plugin
          mountPath: /etc/nginx/lua/plugins/crowdsec
          subPath: crowdsec
